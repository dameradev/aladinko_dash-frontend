{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/damjanradev/Desktop/Coding/aladinko/Advanced-React/finished-application/frontend/components/Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\\n    allCarpets(first: $first, skip: $skip) {\\n      id\\n      name\\n      address\\n      phoneNumber\\n      message\\n      city\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\nexport var ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductsListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductsListStyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:flex;flex-direction:column;\"]);\n_c = ProductsListStyles;\nexport default function Products(_ref) {\n  _s();\n\n  var _this = this;\n\n  var page = _ref.page;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n      children: data === null || data === void 0 ? void 0 : data.allCarpets.map(function (carpet) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-carpet\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: carpet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: carpet.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: carpet.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: carpet.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: carpet.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this)]\n        }, carpet.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductsListStyles\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/Users/damjanradev/Desktop/Coding/aladinko/Advanced-React/finished-application/frontend/components/Products.js"],"names":["useQuery","gql","styled","perPage","ALL_PRODUCTS_QUERY","ProductsListStyles","div","Products","page","variables","skip","first","data","error","loading","console","log","message","allCarpets","map","carpet","name","address","phoneNumber","city","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,IAAMC,kBAAkB,GAAGH,GAAH,mBAAxB;AAaP,IAAMI,kBAAkB,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,2CAAxB;KAAMD,kB;AAKN,eAAe,SAASE,QAAT,OAA4B;AAAA;;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACRR,QAAQ,CAACI,kBAAD,EAAqB;AAC5DK,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEF,IAAI,GAAGL,OAAP,GAAiBA,OADd;AAETQ,MAAAA,KAAK,EAAER;AAFE;AADiD,GAArB,CADA;AAAA,MACjCS,IADiC,aACjCA,IADiC;AAAA,MAC3BC,KAD2B,aAC3BA,KAD2B;AAAA,MACpBC,OADoB,aACpBA,OADoB;;AAQzCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE,QAAC,kBAAD;AAAA,gBACGL,IADH,aACGA,IADH,uBACGA,IAAI,CAAEM,UAAN,CAAiBC,GAAjB,CAAqB,UAACC,MAAD;AAAA,4BACpB;AAAqB,UAAA,SAAS,EAAC,eAA/B;AAAA,kCACE;AAAA,sBAAIA,MAAM,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA,sBAAID,MAAM,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAA,sBAAIF,MAAM,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,mBAHF,eAIE;AAAA,sBAAIH,MAAM,CAACH;AAAX;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE;AAAA,sBAAIG,MAAM,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,mBALF;AAAA,WAAUJ,MAAM,CAACK,EAAjB;AAAA;AAAA;AAAA;AAAA,iBADoB;AAAA,OAArB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA3BuBlB,Q;UACWP,Q;;;MADXO,Q","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\n\nexport const ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n    allCarpets(first: $first, skip: $skip) {\n      id\n      name\n      address\n      phoneNumber\n      message\n      city\n    }\n  }\n`;\n\nconst ProductsListStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default function Products({ page }) {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n    },\n  });\n\n  console.log(data);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div>\n      <ProductsListStyles>\n        {data?.allCarpets.map((carpet) => (\n          <div key={carpet.id} className=\"single-carpet\">\n            <p>{carpet.name}</p>\n            <p>{carpet.address}</p>\n            <p>{carpet.phoneNumber}</p>\n            <p>{carpet.message}</p>\n            <p>{carpet.city}</p>\n          </div>\n        ))}\n      </ProductsListStyles>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}