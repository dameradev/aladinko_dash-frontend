{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/damjanradev/Desktop/Coding/aladinko/Advanced-React/finished-application/frontend/components/Products.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\nexport const ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n    allCarpets(first: $first, skip: $skip) {\n      id\n      name\n      address\n      phoneNumber\n      message\n      city\n    }\n  }\n`;\nconst ProductsListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductsListStyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:flex;flex-direction:column;.single-carpet{padding:2rem;box-shadow:0px 4px 6px #00000029;margin:2rem 0;font-weight:100;}p{text-transform:capitalize;border-bottom:1px solid #000;}\"]);\nexport default function Products({\n  page\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  });\n  console.log(data);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n      children: data === null || data === void 0 ? void 0 : data.allCarpets.map(carpet => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-carpet\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Ime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), \" \", carpet.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [carpet.address, \", \", carpet.city.toLowerCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: carpet.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: carpet.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, carpet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/damjanradev/Desktop/Coding/aladinko/Advanced-React/finished-application/frontend/components/Products.js"],"names":["useQuery","gql","styled","perPage","ALL_PRODUCTS_QUERY","ProductsListStyles","div","Products","page","data","error","loading","variables","skip","first","console","log","message","allCarpets","map","carpet","name","address","city","toLowerCase","phoneNumber","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,kBAAkB,GAAGH,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAaP,MAAMI,kBAAkB,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,iMAAxB;AAiBA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AACzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BX,QAAQ,CAACI,kBAAD,EAAqB;AAC5DQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEL,IAAI,GAAGL,OAAP,GAAiBA,OADd;AAETW,MAAAA,KAAK,EAAEX;AAFE;AADiD,GAArB,CAAzC;AAOAY,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACO,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE,QAAC,kBAAD;AAAA,gBACGR,IADH,aACGA,IADH,uBACGA,IAAI,CAAES,UAAN,CAAiBC,GAAjB,CAAsBC,MAAD,iBACpB;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OACoBA,MAAM,CAACC,IAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,qBACGD,MAAM,CAACE,OADV,QACqBF,MAAM,CAACG,IAAP,CAAYC,WAAZ,EADrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA,oBAAIJ,MAAM,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA,oBAAIL,MAAM,CAACH;AAAX;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAAUG,MAAM,CAACM,EAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\n\nexport const ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n    allCarpets(first: $first, skip: $skip) {\n      id\n      name\n      address\n      phoneNumber\n      message\n      city\n    }\n  }\n`;\n\nconst ProductsListStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .single-carpet {\n    padding: 2rem;\n    box-shadow: 0px 4px 6px #00000029;\n    margin: 2rem 0;\n    font-weight: 100;\n  }\n\n  p {\n    text-transform: capitalize;\n    border-bottom: 1px solid #000;\n  }\n`;\n\nexport default function Products({ page }) {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n    },\n  });\n\n  console.log(data);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div>\n      <ProductsListStyles>\n        {data?.allCarpets.map((carpet) => (\n          <div key={carpet.id} className=\"single-carpet\">\n            <p>\n              <span>Ime</span> {carpet.name}\n            </p>\n            <p>\n              {carpet.address}, {carpet.city.toLowerCase()}\n            </p>\n            <p>{carpet.phoneNumber}</p>\n            <p>{carpet.message}</p>\n          </div>\n        ))}\n      </ProductsListStyles>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}